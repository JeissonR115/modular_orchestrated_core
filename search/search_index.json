{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MOC","text":"<p>Arquitectura modular orientada a plugins y orquestadores por cliente (tenant), dise\u00f1ada para escalar aplicaciones multi-cliente sin duplicar c\u00f3digo ni sacrificar personalizaci\u00f3n.</p>"},{"location":"#contexto","title":"Contexto","text":"<p>Actualmente se mantienen 30 aplicaciones distintas (6 apps \u00d7 5 clientes), cada una con sus propias variaciones, niveles de actualizaci\u00f3n y mantenimiento.</p> <p>Con la incorporaci\u00f3n de un nuevo cliente (que requerir\u00e1 todas las apps) y el desarrollo de una nueva aplicaci\u00f3n, el sistema escalar\u00e1 a 42 instancias diferentes.</p>"},{"location":"#problemas-detectados","title":"Problemas detectados","text":"<ul> <li>L\u00f3gica duplicada entre m\u00faltiples bases de c\u00f3digo</li> <li>Mantenimiento fragmentado e ineficiente</li> <li>Integraci\u00f3n de nuevos clientes lenta y costosa</li> <li>Alta complejidad en pruebas, QA y despliegue</li> </ul>"},{"location":"#objetivo","title":"Objetivo","text":"<p>Centralizar el desarrollo sobre una \u00fanica base de c\u00f3digo reutilizable, mediante una arquitectura compuesta por:</p> <ul> <li>Un n\u00facleo funcional com\u00fan (<code>core</code>)</li> <li>Plugins generales reutilizables (l\u00f3gica compartida)</li> <li>Orchestrators por cliente (personalizaci\u00f3n aislada por tenant)</li> </ul> <p>Esto permite mantener la l\u00f3gica compartida y personalizar comportamientos sin ramificar el sistema.</p>"},{"location":"#componentes-principales","title":"Componentes principales","text":"<pre><code>\ud83d\udcc1 src\n\u251c\u2500\u2500 \ud83d\udcc1 core\n\u251c\u2500\u2500 \ud83d\udcc1 plugins\n\u2502   \u2514\u2500\u2500 \ud83d\udcc1 shared\n\u251c\u2500\u2500 \ud83d\udcc1 tenants\n\u2502   \u251c\u2500\u2500 \ud83d\udcc1 ClienteA\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 Orchestrator.cs\n\u2502   \u2514\u2500\u2500 \ud83d\udcc1 ClienteB\n\u2502       \u2514\u2500\u2500 \ud83d\udcc4 Orchestrator.cs\n</code></pre> <ul> <li>Plugins compartidos: funcionalidades generales como pagos, notificaciones, etc.</li> <li>Orchestrators por cliente: definen qu\u00e9 plugins usar y c\u00f3mo configurarlos seg\u00fan el tenant.</li> <li>Loader: selecciona el orchestrator correcto al iniciar, usando <code>TENANT_ID</code>.</li> </ul>"},{"location":"#como-funciona","title":"C\u00f3mo funciona","text":"<ol> <li>Se define la variable de entorno <code>TENANT_ID</code> al desplegar.</li> <li>Al arrancar, el sistema carga el orchestrator correspondiente.</li> <li>El orchestrator configura plugins y comportamientos del microservicio.</li> <li>El core ejecuta usando esa configuraci\u00f3n, de forma transparente.</li> </ol> <p>Esto elimina condicionales en tiempo de ejecuci\u00f3n y permite una personalizaci\u00f3n s\u00f3lida sin duplicaci\u00f3n.</p>"},{"location":"#ventajas","title":"Ventajas","text":"<ul> <li>C\u00f3digo centralizado y mantenible</li> <li>Plugins reusables, desacoplados y testeables</li> <li>Personalizaci\u00f3n controlada por tenant</li> <li>Escalado f\u00e1cil a nuevos clientes</li> <li>Despliegues consistentes y predecibles</li> </ul>"},{"location":"#consideraciones","title":"Consideraciones","text":"<ul> <li>Requiere un dise\u00f1o modular disciplinado</li> <li>Los contratos entre core y plugins deben estar bien definidos</li> <li> <p>Es fundamental tener una estrategia clara de:</p> </li> <li> <p>Versionado por plugin</p> </li> <li>Pruebas por orchestrator</li> </ul>"},{"location":"#ideal-para-equipos-que","title":"Ideal para equipos que:","text":"<ul> <li>Mantienen m\u00faltiples aplicaciones similares por cliente</li> <li>Quieren reducir deuda t\u00e9cnica y mantenimiento cruzado</li> <li>Necesitan escalar a nuevos clientes sin ramificar</li> <li>Buscan una base s\u00f3lida para crecimiento horizontal</li> </ul>"},{"location":"#mas-informacion","title":"M\u00e1s informaci\u00f3n","text":"<ul> <li>Documentaci\u00f3n t\u00e9cnica detallada</li> <li>Gu\u00eda para crear un plugin compartido</li> <li>C\u00f3mo definir un orchestrator por cliente</li> </ul>"}]}