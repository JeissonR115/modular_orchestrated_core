"use strict";(self.webpackChunkmoc=self.webpackChunkmoc||[]).push([[826],{6622:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"arquitecture/x","title":"Arquitectura MOC","description":"La arquitectura Modular Orchestrated Core (MOC) se basa en la separaci\xf3n clara entre l\xf3gica compartida y personalizaci\xf3n por cliente, lo cual permite escalar, mantener y evolucionar aplicaciones multi-tenant sin duplicar c\xf3digo.","source":"@site/docs/arquitecture/x.md","sourceDirName":"arquitecture","slug":"/arquitecture/x","permalink":"/modular_orchestrated_core/docs/arquitecture/x","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/arquitecture/x.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Relaci\xf3n con patrones de dise\xf1o","permalink":"/modular_orchestrated_core/docs/arquitecture/relationship"},"next":{"title":"buenas-practicas","permalink":"/modular_orchestrated_core/docs/implementation/buenas-practicas"}}');var i=r(4848),c=r(8453);const s={},o="Arquitectura MOC",t={},l=[{value:"Diagrama General",id:"diagrama-general",level:2},{value:"Capas Principales",id:"capas-principales",level:2},{value:"1. Core",id:"1-core",level:3},{value:"2. Modules",id:"2-modules",level:3},{value:"3. Orchestrators",id:"3-orchestrators",level:3},{value:"4. Loader",id:"4-loader",level:3},{value:"Comparaci\xf3n con otros enfoques",id:"comparaci\xf3n-con-otros-enfoques",level:2},{value:"Relaci\xf3n con patrones de dise\xf1o",id:"relaci\xf3n-con-patrones-de-dise\xf1o",level:2},{value:"Consideraciones T\xe9cnicas",id:"consideraciones-t\xe9cnicas",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"arquitectura-moc",children:"Arquitectura MOC"})}),"\n",(0,i.jsxs)(n.p,{children:["La arquitectura ",(0,i.jsx)(n.strong,{children:"Modular Orchestrated Core (MOC)"})," se basa en la separaci\xf3n clara entre l\xf3gica compartida y personalizaci\xf3n por cliente, lo cual permite escalar, mantener y evolucionar aplicaciones multi-tenant sin duplicar c\xf3digo."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"diagrama-general",children:"Diagrama General"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mermaid",children:"graph TD\n  A[Client Request] --\x3e|TENANT_ID| B[Loader]\n  B --\x3e C[Orchestrator ClienteX]\n  C --\x3e D[Modules: Payments, Notifications, etc.]\n  D --\x3e E[Core]\n  C --\x3e E\n"})}),"\n",(0,i.jsx)(n.p,{children:"Este flujo representa c\xf3mo se orquesta la carga modular seg\xfan el tenant."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"capas-principales",children:"Capas Principales"}),"\n",(0,i.jsx)(n.h3,{id:"1-core",children:"1. Core"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L\xf3gica base del sistema."}),"\n",(0,i.jsx)(n.li,{children:"Contiene los contratos e interfaces comunes."}),"\n",(0,i.jsx)(n.li,{children:"No tiene conocimiento espec\xedfico de ning\xfan cliente."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-modules",children:"2. Modules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implementaciones plug-and-play que resuelven funcionalidades reutilizables: notificaciones, pagos, auditor\xeda, validaciones, etc."}),"\n",(0,i.jsx)(n.li,{children:"Configurables desde los orquestadores."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-orchestrators",children:"3. Orchestrators"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cada cliente tiene un archivo que configura c\xf3mo debe comportarse el sistema para ese tenant."}),"\n",(0,i.jsx)(n.li,{children:"Define qu\xe9 m\xf3dulos usar y c\xf3mo parametrizarlos."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'// ClienteA.Orchestrator.cs\npublic override void Configure()\n{\n    UseModule<PaymentsModule>(config => config.UseCurrency("USD"));\n    UseModule<NotificationsModule>(config => config.WithProvider("Twilio"));\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-loader",children:"4. Loader"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Carga el orchestrator correspondiente usando la variable de entorno ",(0,i.jsx)(n.code,{children:"TENANT_ID"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Inyecta configuraciones y arranca la aplicaci\xf3n con la composici\xf3n correcta."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"comparaci\xf3n-con-otros-enfoques",children:"Comparaci\xf3n con otros enfoques"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Enfoque"}),(0,i.jsx)(n.th,{children:"Ventajas MOC"}),(0,i.jsx)(n.th,{children:"Desventajas de otros enfoques"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Monolito por cliente"}),(0,i.jsx)(n.td,{children:"Evita duplicaci\xf3n"}),(0,i.jsx)(n.td,{children:"Duplicaci\xf3n de c\xf3digo y esfuerzo"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Feature flags"}),(0,i.jsx)(n.td,{children:"Modularizaci\xf3n clara"}),(0,i.jsx)(n.td,{children:"Acoplamiento, l\xf3gica condicional compleja"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Microservicios aislados por cliente"}),(0,i.jsx)(n.td,{children:"Centralizaci\xf3n y reutilizaci\xf3n"}),(0,i.jsx)(n.td,{children:"Fragmentaci\xf3n extrema, dif\xedcil mantenimiento"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"relaci\xf3n-con-patrones-de-dise\xf1o",children:"Relaci\xf3n con patrones de dise\xf1o"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bridge"}),": separa abstracci\xf3n (core) de implementaci\xf3n (m\xf3dulos), permitiendo cambiar ambos de forma independiente."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Strategy"}),": cada tenant puede cambiar comportamientos a trav\xe9s del orquestador."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Plugin"}),": m\xf3dulos act\xfaan como plugins intercambiables."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"consideraciones-t\xe9cnicas",children:"Consideraciones T\xe9cnicas"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"El core debe ser completamente desacoplado de la l\xf3gica por cliente."}),"\n",(0,i.jsx)(n.li,{children:"Los m\xf3dulos deben exponer interfaces claras."}),"\n",(0,i.jsx)(n.li,{children:"La configuraci\xf3n debe estar desacoplada del ciclo de vida de la app."}),"\n",(0,i.jsx)(n.li,{children:"Es fundamental usar pruebas unitarias y de integraci\xf3n por orchestrator."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var a=r(6540);const i={},c=a.createContext(i);function s(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);